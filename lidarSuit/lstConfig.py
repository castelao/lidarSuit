import json

class configurations:

    def __init__(self, lst=None):

        self.loadVersion(lst)
        self.loadReference()
        self.loadInstitution()
        self.loadInstrument()
        self.loadSite()
        self.loadContact()
        self.loadEmail()
        self.loadComments()

        return None
    
    def loadVersion(self, lst):
        
        if lst == None:
            self.lstVersion = 'temporary config file'
        else:
            self.lstVersion = lst.__version__
            
        return self

    def loadInstitution(self, institution='institution name'):

        self.institution = institution

        return self

    def loadInstrument(self, instrument='instrument name'):

        self.instrument = instrument

        return self

    def loadSite(self, site='site name'):

        self.site = site

        return self

    def loadContact(self, contact='contact person'):

        self.contact = contact

        return self

    def loadEmail(self, email='contact email'):

        self.email = email

        return self
    
    def loadReference(self, reference='Generated by lidarSuit version: {0}'):

        self.references = reference.format(self.lstVersion)

        return self
    
    def loadComments(self, comments='General comments'):
    
        self.comments = comments
        
        return self

    def generateConf(self):

        configDic = {}
        
        configDic['references'] = self.references
        configDic['institution'] = self.institution
        configDic['instrument_name'] = self.instrument
        configDic['site_name'] = self.site
        configDic['comments'] = self.comments
        configDic['contact_person'] = self.contact
        configDic['email'] = self.email

        configJS = json.dumps(configDic)
        configFile = open('config.json','w')
        configFile.write(configJS)
        configFile.close()

        return None

    def loadConfFile(self, filePath='config.json'):
        
        
        try:
            configDic = json.load(open(filePath))
            
        except FileNotFoundError:
            
            print('You do not have a config file yet')
            print('a temporary config file was generated')
            print('See the documentation for generating it')
            self.generateConf()
            configDic = json.load(open(filePath))
        
        self.loadReference(configDic['references'])
        self.loadInstitution(configDic['institution'])
        self.loadInstrument(configDic['instrument_name'])
        self.loadComments(configDic['comments'])
        self.loadSite(configDic['site_name'])
        self.loadContact(configDic['contact_person'])
        self.loadEmail(configDic['email'])
        
        return self